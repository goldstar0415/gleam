Taking adding InputSplitReader as example:

1. Add these to control_message.proto

    message InputSplitReader {
        required string inputType = 1;
    }

2. Add this to control_message.proto

    message Instruction {
        ...
        optional InputSplitReader inputSplitReader = 10;
    }

3. generate protobuf files

    protoc --go_out=. *.proto

3.9 in github.com/chrislusf/gleam/flow/structure.go, add const
    TypeInputSplitReader

4. in github.com/chrislusf/gleam/distributed/plan/instructions.go, function translateToInstruction()
    serialize the Instruction


    if task.Step.FunctionType == flow.TypeInputSplitReader {
        return &cmd.Instruction{
            Name: proto.String(task.Step.Name),
            InputSplitReader: &cmd.InputSplitReader{
                InputType:           proto.String(task.Step.Params["inputType"].(string)),
            },
        }
    }


6. in github.com/chrislusf/gleam/distributed/executor/executor.go, function ExecuteInstruction()

    } else if i.GetInputSplitReader() != nil {

        connectInputOutput(wg, i.GetName(), inChan, outChan, i, isFirst, isLast, readerCount)

        flow.ReadInputSplits(i.GetInputSplitReader().GetInputType(), inChan.Reader, outChan.Writer)
